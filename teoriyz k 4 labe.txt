1.Каково назначение перегрузки операторов? 
Перегрузка операторов в программировании— один из способов реализации полимарфизма заключающийся в возможности одновременного существования в одной области видимости нескольких различных вариантов применения оператора, имеющих одно и то же имя, но различающихся типами параметров, к которым они применяются.
2. Как используется ключевое слово  operator? 
Ключевое слово operator используется для перегрузки встроенного оператора или выполнения пользовательского преобразования в объявлении класса или структуры.
Чтобы перегрузить оператор в пользовательском классе или структуре, создайте объявление оператора в соответствующем типе. Объявление оператора, которое перегружает встроенный оператор C#, должно удовлетворять следующим правилам:
•	Оно должно включать public и модификатор static.
•	Оно должно включать operator X, где X — имя или обозначение перегружаемого оператора.
•	Унарные операторы имеют один параметр, а бинарные операторы имеют два параметра.В каждом случае по крайней мере один параметр должен иметь тот же тип, что и класс или структура, в которых объявлен этот оператор.
Сведения о том, как определить операторы преобразования, см. в разделах, посвященных ключевым словам explicit и implicit.

3. Какие операции нельзя перегружать в C#? 
> [] (но есть индексатор) 
> () (можно определить новые операторы преобразования) 
> +=, -=, *=, /=, %=, &=, |=, ^=, <<=, >>= (но получаем автоматически в случае перегрузки бинарной операции)
 > &&, ||
 >=, ., ?:, ??, ->, =>, f(x), as, checked, unchecked, default, delegate, is, new, sizeof, typeof
4. Можно ли перегрузкой отменить очередность выполнения операции?
 5. Истинно ли следующее утверждение: операция >= может быть перегружена.  НЕТ
6. Сколько аргументов требуется для определения перегруженной унарной операции? ДВА
 7. Можно ли перегружать операцию []? НЕТ
 8. Можно ли перегружать операцию ->?Ytn
 9. Приведите пример оператора приведения типа. implicit и explicit
 10. Что такое метод расширения? Как и где его можно использовать?
Методы расширения (extension methods) позволяют добавлять новые методы в уже существующие типы без создания нового производного класса. Эта функциональность бывает особенно полезна, когда нам хочется добавить в некоторый тип новый метод, но сам тип (класс или структуру) мы изменить не можем, поскольку у нас нет доступа к исходному коду. Либо если мы не можем использовать стандартный механизм наследования, например, если классы определенны с модификатором sealed.
 11. Пусть дан фрагмент кода определения оператора преобразования типа. Определить форму преобразования. 
public static implicit operator Point2D(Point3D a)       {/*  код*/;} Неявное 
12. Выберите верное утверждение. Метод расширения может: 
1) получать доступ к public членам расширяемого класса 2) получать доступ к protected членам расширяемого класса 3) получать доступ к internal членам расширяемого класса 4) быть объявлен в любом классе 5) быть без параметров (1)
13. Выберите из списка неверное правило перегрузки операторов для C#. 
1) префиксные операции ++ и – – перегружаются парами
 2) операции сравнения перегружаются парами: == и != ; < и >;<= и >= 3) перегруженные операции обязаны возвращать значения
 !!!!4) должны объявляться как protected
 5) true  и false можно перегружать 

