Вопросы ко второй  лабораторной работе по ООП
1.Что такое .Net Framework и из чего он состоит?
.Net Framework –  это программная платформа , выпущенная компанией Microsoft в 2002 году. Платформа .Net Framework состоит из CLR и обширного набора библиотек. Библиотеки включают библиотеки ядра и прикладные библиотеки, которые зависят от библиотек ядра.
2.Поясните , что такое CLR-среда ?
CLR-среда (Common language runtime)– это общеязыковая  исполнительная среда для выполнения управляемого кода. Она играет роль хоста для многочисленных служб времени выполнения .
3.Что такое FCL?
FCL(.Net Framework Class Library)-стандартная библиотека улассов платформы .Net Framework; объектно-ориентированная библиотека классов , интерфейсов и системы типов.
4.Какая наименьшая исполнимая единица .Net?
Наименьшая исполнимая единица в .Net – это сборка.
5.Что такое IL?
IL(Intermediate Language) – это промежуточный язык , на котором генерируют код  при компиляции компиляторы NET Framework$j,]rnyj-ориентированный машинный язык не зависящий от процессора.
6.Поясните работу JIT-компилятора.(just-in-time)
JIT-компилятор преобразует код IL в собственный код машины, такой как х86. 
7.Что такое CTS(Common Type System)?
CTS-система общих типов ,определяющая способ объявления , использования и управления типами в среде CLR , а также являющаяся важной составной частью поддержки межъязыковой интеграции в среде выполнения; спецификация типов , которые должны поддерживаться всеми языками ориентированными на CLR.
•	8)Какие аспекты поведения определяет тип System.Object 
9) Что находится в MSCorLib dll? 
В настоящее время я профилирую консольное приложение с выборкой процессора. ОС - это Windows 8 Enterprise 64 бит с обновлением Microsoft Visual Studio Ultimate 2012 4. Я вижу, что 34% эксклюзивных образцов находятся внутри mscorlib.ni.dll. Затем в представлении "Модули" я открываю файл mscorlib.ni.dll, и я вижу, что все вызовы выполняются для строк unknwon. 
10)Что такое частные и общие сборки? 
Частные находятся в каталоге программы, а общие в GAC 
11) Что такое assembly manifest? 
Сборка является базовой структурной единицей в .NET, на уровне которой проходит контроль версий, развертывание и конфигурация приложения. Каждая сборка, будь то статическая или динамическая, содержит набор данных, который описывает, как элементы в сборке связаны друг с другом. В манифесте сборки содержатся метаданные сборки. Манифест сборки содержит все метаданные, необходимые для указания требований к версии сборки и идентификатора безопасности, а также всех метаданных, необходимых для определения области сборки и разрешения ссылок на ресурсы и классы. 
12). Что такое GAC? 
Global Assembly Cache 
13)Чем managed code отличается от unmanaged code 
Управляемый код - это код .NET(VB.NET, С# и т.д.), который вы пишете и компилируете в .NET CIL. 
Неуправляемый код - это код, который не находится под .NET, который компилируется для прямого машинного кода. 
14). Как и для чего определен метод Main? 
Метод с именем Main является самым главным методом в программе на языке программирования c sharp (c#), потому что с него начинается выполнение приложения. 
15) Варианты использования директивы using( using Directive ) в C#. 
Директива using разрешает использование типов в пространстве имен, поэтому уточнение использования типа в этом пространстве имен не требуется: 
using System.Text; 
Также директива using позволяет создавать псевдонимы пространства имен или типа: 
using Project = PC.MyCompany.Project; 
Эта версия использования называется директива using alias. 
16 Как связаны между собой сборки и пространства имен?
  Пространство имен представляет собой логическую группировку типов (в основном, чтобы избежать столкновений имен). Сборка может содержать типы в нескольких пространствах имен (System.DLL содержит несколько...), и одно пространство имен может быть распространено по сборкам (например, System.Threading). 
17)Что такое примитивные типы данных? Перечислите их
Тип данных определяет внутреннее представление данных, множество значений, которые может принимать объект, а также допустимые действия, которые можно применять над объектом. 
В языке C# есть следующие примитивные типы данных: sbyte, byte, short, ushort, int, uint, long, ulong, char, float, double, bool, decimal
18. Что такое ссылочные типы? Какие типы относятся к ним?
В переменных ссылочных типов хранятся ссылки на их данные (объекты). Ссылочные типы:
* Тип object
* Тип string
* Классы (class)
* Интерфейсы (interface)
* Делегаты (delegate)
19. Какие типы относятся к типам-значениям? Типы значений:
* Целочисленные типы (byte, sbyte, char, short, ushort, int, uint, long, ulong)
* Типы с плавающей запятой (float, double)
* Тип decimal
* Тип bool
* Перечисления enum
* Структуры (struct)
20. В чем отличие между ссылочными и значимыми типами данных? Тип значений содержит значение и хранится в стеке. Тип значений не может содержать null значение. Ссылочный тип содержит ссылку на данные и хранится в куче. Ссылочные типы могут содержать null значение.
21. Что такое упаковка и распаковка значимых типов?
 Упаковкой (boxing) называется процесс преобразования типа значения в тип System.Object или в тип интерфейса, который реализуется данным типомзначением.
Распаковка (unboxing) получение указателя на исходный значимый тип (поля данных), содержащийся в объекте.
22. Для чего используется тип dynamic?
Назначение: Отражения или коммуникации с другими компонентами. Использование: для членов класса - поля, свойства/индексаторы, структур , для метода, делегата, или унарных/бинарных операторов.
23. Что такое неявно типизированная переменная?
Неявно типизированная переменная объявляется с помощью ключевого слова var и должна быть непременно инициализирована. Для определения типа этой переменной компилятору служит тип ее инициализатора, т.е. значения, которым она инициализируется.
24. Для чего используют Nullable тип?
Иногда бывают ситуации, когда необходимо чтобы тип значений мог принимать null, и это можно сделать, указав знак вопроса (?) после имени типа, при объявлении переменной.
Nullable-типы могут пригодиться при работе с базой данных. Некоторые поля таблицы базы данных могут принимать значение null.
25. Как объявить строковый литерал? Какие операции можно выполнять со строкой?
Операции для строк : присваивание (=); 
проверка на равенство содержимого (==);
 проверка на неравенство (!=); 
 обращение по индексу ([]); 
 сцепление (конкатенация) строк (+) 
 <,>, >=,<= - сравнивают ссылки!!!!!!!!
26. Какие есть способы для задания и инициализации строк?
string message1;
string message2 = null;
string message3 = System.String.Empty;
string oldPath = "c:\\Program Files\\Microsoft Visual Studio 8.0";
string newPath = @"c:\Program Files\Microsoft Visual Studio 9.0";
System.String greeting = "Hello World!";
var temp = "I'm still a strongly-typed System.String!";
const string message4 = "You can't get rid of me!";
char[] letters = { 'A', 'B', 'C' };
string alphabet = new string(letters);
27. Какие методы есть у типа String?
Compare Сравнение двух строк в алфавитном порядке. Разные реализации метода позволяют сравнивать строки и подстроки с учетом и без учета регистра и особенностей национального представления дат и т. д.
CompareOrdinal Сравнение двух строк по кодам символов. Разные реализации метода позволяют сравнивать строки и подстроки
CompareTo Сравнение текущего экземпляра строки с другой строкой
Concat Конкатенация строк. Метод допускает сцепление произвольного числа строк
Copy Создание копии строки
Format Форматирование в соответствии с заданными спецификаторами формата
IndexOf, LastIndexOf, … Определение индексов первого и последнего вхождения заданной подстроки или любого символа из заданного набора
Insert Вставка подстроки в заданную позицию
Join Слияние массива строк в единую строку. Между элементами массива вставляются разделители (см. далее) Length Длина строки (количество символов) Remove Удаление подстроки из заданной позиции
Replace Замена всех вхождений заданной подстроки или символа новой подстрокой или символом
Split Разделение строки на элементы, используя заданные разделители. Результаты помещаются в массив строк
Substring Выделение подстроки, начиная с заданной позиции
28. В чем отличие пустой и null строки? 
Пустая строка – это экземпляр объекта System.String, содержащий 0 символов . Для пустых строк можно вызывать методы.Строки со значением null не ссылаются на экземпляр объекта System.String, попытка вызвать метод для строки null вызовет исключение NullReferenceException . 
29. Как можно выполнить сравнение строк? 
Сравнить строки в си шарпе можно следующими методами :
Compare()
Сравнение двух строк в алфавитном порядке. Разные 
реализации метода позволяют сравнивать строки и 
подстроки с учетом и без учета регистра и 
особенностей национального представления дат и т. д. CompareOrdinal()
Сравнение двух строк по кодам символов. Разные 
реализации метода позволяют сравнивать строки и 
подстроки CompareTo()
Сравнение текущего экземпляра строки с другой 
строкой 30. В чем отличие типов String и StringBuilder? 
Строка Экземпляр String неизменен, то есть мы не можем изменить его после его создания. Если мы выполним любую операцию в String, он вернет новый экземпляр (создает новый экземпляр в памяти) вместо изменения существующего значения экземпляра.
StringBuilder StringBuilder изменен, то есть если мы выполним любую операцию над StringBuilder, он обновит существующее значение экземпляра и не создаст новый экземпляр.
31. Поясните явные преобразования переменных с помощью команд Convert. 
В статическом классе  Convert определены методы для преобразования каждого базового типа в любой другой базовый тип. Методы числового преобразования Convert всегда производят округление.
double d = Convert.ToDouble(b);
32. Как выполнить консольный ввод/вывод? 
Метод Console.WriteLine служит для вывода информации.
Примеры:  Console.WriteLine("Добро пожаловать в C#!");
Console.WriteLine($"Имя: {name}  Возраст: {age}  Рост: {height}");
Console.WriteLine("Имя: {0}  Возраст: {2}  Рост: {1}м", name, height, age);
Кроме Console.WriteLine() можно также использовать метод Console.Write(), он работает точно так же за тем исключением, что не осуществляет переход на следующую строку.
Для ввода информации используется метод Console.ReadLine(). Он позволяет получить введенную строку .
Примеры :
 string name = Console.ReadLine();
33. Приведите примеры определения и инициализации одномерных и двумерных массивов.  
Определение и инициализация одномерных массивов.
string[] seasons = {"зима","весна","лето","осень"}; 
int[] numbers = new int[] { 1, 2, 3, 4, 5 };
int[] numbers = new int[5] { 1, 2, 3, 4, 5 };
Определение и инициализация двумерных массивов.
int[,] nums2 = { { 0, 1, 2 }, { 3, 4, 5 } };
int[,]array=new int[,] {{1,2,3},{4,5,6,}};
34. Что такое ступенчатый массив? Как его задать? 
Ступенчатый массив- массив массивов , в котором в котором длина каждого массива может быть разной.
Задание ступенчатого массивов:
 
35. Какие типы можно использовать в foreach? Приведите пример. 
Foreach предназначен для перебора элементов в контейнерах , в том числе в массивах. Типы , используемые в foreach: массив , коллекции ,строки.
Пример:Перечисление символов в строке
Foreach(char с in “beer” )// с – это переменная итерации
Console.WriteLine (c);
String[] collection =new String[]
{ "1-й элемент",
"2-й элемент",
"3-й элемент"
};
//Последовательно выводим в консоль элементы массива
foreach (String element in collection)
{
Console.WriteLine(element);
} 36. Что такое кортеж? Для чего и как он используется? 
Кортеж – это множество обобщённых классов для хранения набора элементов разных типов.
Кортежи комбинируют объекты различных типов. Кортежи неизменяемы (можно создавать хэши и использовать в качестве ключей).
Кортежи могут передаваться в качестве параметров в метод, могут быть возвращаемым результатом функции.
Например, одной из распространенных ситуаций является возвращение из функции двух и более значений, в то время как функция можно возвращать только одно значение.
37. Что такое локальная переменная?
Локальная функция – это вспомогательная  функция, определённая внутри метода, в котором вызывается .
